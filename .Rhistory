pie(table(Class3$Gender))
#pie chart
Class3$Gender<-factor(Class3$Gender)
levels(Class3$Gender)<- c("Male", "Female", "Other")
pie(table(Class3$Gender))
#pie chart
Class3$Gender<-factor(Class3$Gender)
levels(Class3$Gender)<- c("Male", "Female", "Other")
pie(table(Class3$Gender))
#pie chart
Class3$Gender<-factor(Class3$Gender)
levels(Class3$Gender)<- c("Male", "Female", "Other")
pie(table(Class3$Gender))
TODOS<-Class3
rm(Class3)
save.image(".RData")
ggplot(TODOS, aes(x=rev(levels(CHANGE_Class3)), fill=Gender) ) +  geom_bar(position="Fill")+ scale_fill_brewer( palette = "Pastel2")+ theme_classic()+
labs(title="Gender",
subtitle="Sub-groups of potential cyclists",
x="Class",
y=element_blank())+scale_y_continuous(labels = scales::percent)
ggplot(TODOS, aes(x=factor(CHANGE_Class3, levels=rev(levels(CHANGE_Class3)), fill=Gender) ) +  geom_bar(position="Fill")+ scale_fill_brewer( palette = "Pastel2")+ theme_classic()+
labs(title="Gender",
subtitle="Sub-groups of potential cyclists",
x="Class",
y=element_blank())+scale_y_continuous(labels = scales::percent)
ggplot(TODOS, aes(x=factor(CHANGE_Class3, levels=rev(levels(CHANGE_Class3))), fill=Gender) ) +  geom_bar(position="Fill")+ scale_fill_brewer( palette = "Pastel2")+ theme_classic()+
labs(title="Gender",
subtitle="Sub-groups of potential cyclists",
x="Class",
y=element_blank())+scale_y_continuous(labels = scales::percent)
stat(TODOS$CHANGE_Class3)
levels(TODOS$CHANGE_Class3)
TODOS$CHANGE_Class3 <- factor(TODOS$CHANGE_Class3, levels=rev(levels(TODOS$CHANGE_Class3)))
levels(TODOS$CHANGE_Class3)
ggplot(TODOS, aes(factor(TODOS$CHANGE_Class3, levels=rev(levels(TODOS$CHANGE_Class3))), fill=Gender) ) +  geom_bar(position="Fill")+ scale_fill_brewer( palette = "Pastel2")+ theme_classic()+
labs(title="Gender",
subtitle="Sub-groups of potential cyclists",
x="Class",
y=element_blank())+scale_y_continuous(labels = scales::percent)
ggplot(TODOS, aes(factor(TODOS$CHANGE_Class3, levels=rev(levels(TODOS$CHANGE_Class3))), fill=Gender) ) +  geom_bar(position="Fill")+ scale_fill_brewer( palette = "Pastel2")+ theme_classic()+
labs(title="Gender",
subtitle="Sub-groups of potential cyclists",
x="Class",
y=element_blank())+scale_y_continuous(labels = scales::percent)
TODOS$CHANGE_Class3 <- factor(TODOS$CHANGE_Class3, levels=rev(levels(TODOS$CHANGE_Class3)))
ggplot(TODOS, aes(factor(TODOS$CHANGE_Class3, levels=rev(levels(TODOS$CHANGE_Class3))), fill=Gender) ) +  geom_bar(position="Fill")+ scale_fill_brewer( palette = "Pastel2")+ theme_classic()+
labs(title="Gender",
subtitle="Sub-groups of potential cyclists",
x="Class",
y=element_blank())+scale_y_continuous(labels = scales::percent)
TODOS$CHANGE_Class3 <- factor(TODOS$CHANGE_Class3, levels=rev(levels(TODOS$CHANGE_Class3)))
ggplot(TODOS, aes(factor(TODOS$CHANGE_Class3, levels=rev(levels(TODOS$CHANGE_Class3))), fill=Gender) ) +  geom_bar(position="Fill")+ scale_fill_brewer( palette = "Pastel2")+ theme_classic()+
labs(title="Gender",
subtitle="Sub-groups of potential cyclists",
x="Class",
y=element_blank())+scale_y_continuous(labels = scales::percent)
TODOS$CHANGE_Class3 <- factor(TODOS$CHANGE_Class3, levels=rev(levels(TODOS$CHANGE_Class3)))
TODOS$CHANGE_Class3 <- factor(TODOS$CHANGE_Class3, levels=rev(levels(TODOS$CHANGE_Class3)))
TODOS$CHANGE_Class3 <- factor(TODOS$CHANGE_Class3, levels=rev(levels(TODOS$CHANGE_Class3)))
save.image("D:/GIS/Rosix/.RData")
TODOS$CHANGE_Class3 <- factor(TODOS$CHANGE_Class3, levels=rev(levels(TODOS$CHANGE_Class3)))
save.image("D:/GIS/Rosix/.RData")
rm(DF_summary)
rm(SubNC2)
SubClustNC <- read.delim("D:/rosa/Dropbox/MIT/Inquerito Lisboa/Respostas/R/SubClustNC.txt")
View(SubClustNC)
#primeiro fazer uma tabela de frequências por categoria, depois fazer o plot
DF_summary = ddply(
SubClustNC,
.(B3types, CHANGE_Class),
summarize,
count=length(CHANGE_Class))
save.image("D:/GIS/Rosix/.RData")
class(SubClustNC$CHANGE_Class)
SubClustNC$CHANGE_Class <- factor(SubClustNC$CHANGE_Class, levels=rev(levels(SubClustNC$CHANGE_Class)))
SubClustNC$B3types <- factor(SubClustNC$B3types, levels=rev(levels(SubClustNC$B3types)))
#primeiro fazer uma tabela de frequências por categoria, depois fazer o plot
DF_summary = ddply(
SubClustNC,
.(B3types, CHANGE_Class),
summarize,
count=length(CHANGE_Class))
save.image("D:/GIS/Rosix/.RData")
levels(SubClustNC$CHANGE_Class)
SubClustNC$CHANGE_Class<-factor(SubClustNC$CHANGE_Class, levels = c("Irreducible", "Pessimists", "Optimists","Enthusiasts"))
SubClustNC2$B3types<-factor(SubClustNC2$B3types)
levels(SubClustNC2$B3types)<- c( "PreContemplation", "Contemplation", "Preparation")
SubClustNC$B3types<-factor(SubClustNC$B3types)
levels(SubClustNC$B3types)<- c( "PreContemplation", "Contemplation", "Preparation")
#primeiro fazer uma tabela de frequências por categoria, depois fazer o plot
DF_summary = ddply(
SubClustNC,
.(B3types, CHANGE_Class),
summarize,
count=length(CHANGE_Class))
save.image("D:/GIS/Rosix/.RData")
SubNC2 <- read.delim("D:/GIS/Rosix/SubNC2.txt")
View(SubNC2)
SubClustNC$CHANGE_Class3<-SubNC2$CHANGE_Class4
rm(SubNC2)
class(SubClustNC$CHANGE_Class3)
levels(SubClustNC$CHANGE_Class3)
SubClustNC$CHANGE_Class3 <- factor(SubClustNC$CHANGE_Class3, levels=rev(levels(SubClustNC$CHANGE_Class3)))
levels(SubClustNC$CHANGE_Class3)
#primeiro fazer uma tabela de frequências por categoria, depois fazer o plot
DF_summary = ddply(
SubClustNC,
.(B3types, CHANGE_Class3),
summarize,
count=length(CHANGE_Class3))
save.image("D:/GIS/Rosix/.RData")
MCTRIGGERS <- read.delim("D:/GIS/Rosix/MCTRIGGERS.txt")
View(MCTRIGGERS)
ggplot(data=MCTRIGGERS, aes(x=reorder(names,-MCTRIGGERS.MEAN), y=MCTRIGGERS.MEAN, fill = quartis)) +
geom_bar(stat="identity") +geom_text(aes(label=ENshort), data=subset(MCTRIGGERS,quartis=="75-100%"), size=5, hjust = -0.05, angle =45, vjust=-0.3) +
geom_text(aes(label=ENshort), data=subset(MCTRIGGERS,quartis=="50-75%"), size=3, hjust = -0.05, angle =45, vjust=-0.3, color="azure4") +
geom_text(aes(label=ENshort), data=subset(MCTRIGGERS,names=="17"), size=3, hjust = -0.05, angle =45, vjust=-0.3) +
labs(title = "Triggers for cycling - relevance", x = "Triggers of Cyclists", y = "Mean of weighted scores") +
theme_classic() +theme(axis.text.x=element_blank(),axis.ticks.x=element_blank(), legend.position=c(0.8,0.8), plot.title = element_text(size=22, hjust=0.5)) +
scale_fill_manual(values = wes_palette("GrandBudapest1"), "Frequency of choices")  + coord_cartesian(xlim=c(0,45)) + ylim(NA, 0.14)
library(wesanderson)
ggplot(data=MCTRIGGERS, aes(x=reorder(names,-MCTRIGGERS.MEAN), y=MCTRIGGERS.MEAN, fill = quartis)) +
geom_bar(stat="identity") +geom_text(aes(label=ENshort), data=subset(MCTRIGGERS,quartis=="75-100%"), size=5, hjust = -0.05, angle =45, vjust=-0.3) +
geom_text(aes(label=ENshort), data=subset(MCTRIGGERS,quartis=="50-75%"), size=3, hjust = -0.05, angle =45, vjust=-0.3, color="azure4") +
geom_text(aes(label=ENshort), data=subset(MCTRIGGERS,names=="17"), size=3, hjust = -0.05, angle =45, vjust=-0.3) +
labs(title = "Triggers for cycling - relevance", x = "Triggers of Cyclists", y = "Mean of weighted scores") +
theme_classic() +theme(axis.text.x=element_blank(),axis.ticks.x=element_blank(), legend.position=c(0.8,0.8), plot.title = element_text(size=22, hjust=0.5)) +
scale_fill_manual(values = wes_palette("GrandBudapest1"), "Frequency of choices")  + coord_cartesian(xlim=c(0,45)) + ylim(NA, 0.14)
ggplot(data=MCTRIGGERS, aes(x=reorder(names,-MCTRIGGERS.MEAN), y=MCTRIGGERS.MEAN, fill = Category)) +
geom_bar(stat="identity") +geom_text(aes(label=ENshort), size=5, hjust = -0.05, angle =45, vjust=-0.3)  +
labs(title = "Triggers for cycling - relevance", x = "Triggers of Cyclists", y = "Mean of weighted scores") +
theme_classic() +theme(axis.text.x=element_blank(),axis.ticks.x=element_blank(), legend.position=c(0.8,0.8)) +
scale_fill_brewer(palette="Paired") +  coord_cartesian(xlim=c(0,39)) + ylim(NA, 0.16)
save.image("D:/GIS/Rosix/.RData")
#vertical, legendas a 45º, por categoria - MESSY
ggplot(data=MCTRIGGERS, aes(x=reorder(names,-MCTRIGGERS.MEAN), y=MCTRIGGERS.MEAN, fill = Category)) +
geom_bar(stat="identity") +geom_text(aes(label=ENshort), size=5, hjust = -0.05, angle =45, vjust=-0.3)  +
labs(title = "Triggers for cycling - relevance", x = "Triggers of Cyclists", y = "Mean of weighted scores") +
theme_classic() +theme(axis.text.x=element_blank(),axis.ticks.x=element_blank(), legend.position=c(0.8,0.8)) +
scale_fill_brewer(palette="Paired") +  coord_cartesian(xlim=c(0,39)) + ylim(NA, 0.16)
#barras com realce dos quartis nas legendas
ggplot(data=MCTRIGGERS, aes(x=reorder(names,-MCTRIGGERS.MEAN), y=MCTRIGGERS.MEAN, fill = quartis)) +
geom_bar(stat="identity") +geom_text(aes(label=ENshort), data=subset(MCTRIGGERS,quartis=="75-100%"), size=5, hjust = -0.05, angle =45, vjust=-0.3) +
geom_text(aes(label=ENshort), data=subset(MCTRIGGERS,quartis=="50-75%"), size=3, hjust = -0.05, angle =45, vjust=-0.3, color="azure4") +
geom_text(aes(label=ENshort), data=subset(MCTRIGGERS,names=="17"), size=3, hjust = -0.05, angle =45, vjust=-0.3) +
labs(title = "Triggers for cycling - relevance", x = "Triggers of Cyclists", y = "Mean of weighted scores") +
theme_classic() +theme(axis.text.x=element_blank(),axis.ticks.x=element_blank(), legend.position=c(0.8,0.8), plot.title = element_text(size=22, hjust=0.5)) +
scale_fill_manual(values = wes_palette("GrandBudapest1"), "Frequency of choices")  + coord_cartesian(xlim=c(0,45)) + ylim(NA, 0.14)
ggplot(data=MCTRIGGERS, aes(x=reorder(names,-MCTRIGGERS.MEAN), y=MCTRIGGERS.MEAN, fill = quartis)) +
geom_bar(stat="identity") +geom_text(aes(label=ENshort), data=subset(MCTRIGGERS,quartis=="75-100%"), size=4, hjust = -0.05, angle =45, vjust=-0.3) +
geom_text(aes(label=ENshort), data=subset(MCTRIGGERS,quartis=="50-75%"), size=3, hjust = -0.05, angle =45, vjust=-0.3, color="azure4") +
geom_text(aes(label=ENshort), data=subset(MCTRIGGERS,names=="17"), size=3, hjust = -0.05, angle =45, vjust=-0.3) +
labs(title = "Triggers for cycling - relevance", x = "Triggers of Cyclists", y = "Mean of weighted scores") +
theme_classic() +theme(axis.text.x=element_blank(),axis.ticks.x=element_blank(), legend.position=c(0.8,0.8), plot.title = element_text(size=22, hjust=0.5)) +
scale_fill_manual(values = wes_palette("GrandBudapest1"), "Frequency of choices")  + coord_cartesian(xlim=c(0,45)) + ylim(NA, 0.14)
CONTAGENSevolucao <- read.delim("D:/GIS/Rosix/CONTAGENSevolucao.txt")
View(CONTAGENSevolucao)
save.image("D:/GIS/Rosix/.RData")
ggplot(CONTAGENSevolucao, aes(x=Ano, y=Ciclistas, fill=factor(Gira, levels=c("Trotinetas","Bicicleta partilhada", "Bicicleta própria")))) +
geom_bar(stat="identity", position="stack") + facet_grid(~Local2, switch="x") + scale_fill_manual(values=c("#D4A017", "#B2DF8A", "#33A02C")) +
guides(fill=guide_legend(reverse=TRUE), colour=guide_legend(reverse=TRUE)) +  theme_bw() + ggtitle("Comparação do volume de ciclistas observados por local") +
theme(legend.position = c(0.9,0.8), legend.title=element_blank(),panel.grid.major.x=element_blank(),axis.ticks.y=element_blank(),  axis.text.y=element_blank(), panel.border=element_blank(), strip.placement="outside", strip.background = element_rect(colour = "white")) +
labs(y="Volume de ciclistas", x= element_blank())
CONTAGENSzonas <- read.delim("D:/GIS/Rosix/CONTAGENSzonas.txt")
View(CONTAGENSzonas)
CONTAGENSzonasMT <- read.delim("D:/GIS/Rosix/CONTAGENSzonasMT.txt")
View(CONTAGENSzonasMT)
save.image("D:/GIS/Rosix/.RData")
library(knitr)
kable(CONTAGENSevolucao[3:10,], caption = "Exemplo dos dados em melt")
library(knitr)
kable(CONTAGENSevolucao[3:10,c(1:6)], caption = "Exemplo dos dados em melt")
library(knitr)
kable(CONTAGENSevolucao[3:10,c(1:6)], caption = "Exemplo dos dados em melt", row.names = NULL)
library(knitr)
kable(CONTAGENSevolucao[3:10,c(1:6)], caption = "Exemplo dos dados em melt", row.names = NA)
library(knitr)
kable(CONTAGENSevolucao[3:10,c(1:6)], caption = "Exemplo dos dados em melt", row.names = F)
directories <- list.dirs("D:\\GIS")
files <- lapply(directories, list.files, pattern=".r", full.names = TRUE)
files <- lapply(files, sort)
View(files)
directories <- list.dirs("D:\\GIS")
files <- lapply(directories, list.files, pattern=".r", full.names = TRUE, ignore.case=F)
files <- lapply(files, sort)
directories <- list.dirs("D:\\GIS")
files <- lapply(directories, list.files, pattern=".r", full.names = F, ignore.case=F)
files <- lapply(files, sort)
View(files)
files[[92]]
directories <- list.dirs("D:\\GIS")
files <- lapply(directories, list.files, pattern="\\.r$", full.names = F, ignore.case=F)
files <- lapply(files, sort)
View(files)
files<-list.files("D:\\GIS", pattern="\\.r$", full.names = F, ignore.case=F)
files<-list.files("D:\\GIS\\", pattern="\\.r$", full.names = F, ignore.case=F)
rm(files, directories)
save.image("D:/GIS/Rosix/.RData")
library(stplanr)
View(Viagens)
install.packages("export")
library(export)
boxplot(count ~ spray, data = InsectSprays, las = 2)
graph2doc(file="plot.docx", width=7, height=5)
graph2ppt(file="plot.pptx", width=7, height=5)
library(export)
boxplot(count ~ spray, data = InsectSprays, las = 2)
graph2doc(file="plot.docx", width=7, height=5)
graph2ppt(file="plot.pptx", width=7, height=5) #em inches
#o comando refere-se ao último plot que foi feito
PERSONALITY <- read.delim2("D:/GIS/Rosix/PERSONALITY.txt")
View(PERSONALITY)
save.image("D:/GIS/Rosix/.RData")
library(Hmisc)
library(corrplot)
library(ggcorrplot)
#spearman para não paramétricos e rank-based
res<-cor(Personality[c(1:18)], method = "spearman", use = "complete.obs")
library(Hmisc)
library(corrplot)
library(ggcorrplot)
#spearman para não paramétricos e rank-based
res<-cor(PERSONALITY[c(1:18)], method = "spearman", use = "complete.obs")
pers<-as.numeric(PERSONALITY)
rm(PERSONALITY)
PERSONALITY <- read.delim2("D:/GIS/Rosix/PERSONALITY.txt")
View(PERSONALITY)
library(Hmisc)
library(corrplot)
library(ggcorrplot)
#spearman para não paramétricos e rank-based
res<-cor(PERSONALITY[c(1:18)], method = "spearman", use = "complete.obs")
round(res,2)
res2 <- rcorr(as.matrix(PERSONALITY[c(1:18)],method = "spearman", use = "complete.obs")) #agora com p-values
res2
flattenCorrMatrix(res2$r, res2$P)
res<-cor(PERSONALITY[c(1:18)], method = "spearman", use = "complete.obs")
round(res,2)
res2 <- rcorr(as.matrix(PERSONALITY[c(1:18)],method = "spearman", use = "complete.obs")) #agora com p-values
corrplot(res, p.mat = res2$P, type = "upper", order = "FPC", method = "color",
insig = "pch", pch.cex = .9,tl.col = "black")
col<- colorRampPalette(c("blue", "white", "red"))(20)
heatmap(x = res, col = col, symm = TRUE)
save.image("D:/GIS/Rosix/.RData")
names(Personality)[c(1:18)]<- c("Optimist","Adventurous","Routines","Spontaneous","Outdoors","RiskTaker",
"CloseHome","Efficient","Variety","OnTime","Alone","Independent","Creative",
"Patient","Restless","Leader","Participative","Lazy")
names(PERSONALITY)[c(1:18)]<- c("Optimist","Adventurous","Routines","Spontaneous","Outdoors","RiskTaker",
"CloseHome","Efficient","Variety","OnTime","Alone","Independent","Creative",
"Patient","Restless","Leader","Participative","Lazy")
save.image("D:/GIS/Rosix/.RData")
Personalityyy <- read.delim2("D:/GIS/Rosix/Personalityyy.txt")
View(Personalityyy)
Personalityyy3 <- read.delim2("D:/GIS/Rosix/Personalityyy3.txt")
View(Personalityyy3)
library(likert)
Resultyy3 = likert(Personalityyy3)
plot(Resultyy3, type="bar",centered=F)+ggtitle("Cyclists")
ResultyG_1 <- likert(Personalityyy[c(1:6)], grouping=Personalityyy$CHANGE_Class3)
ResultyGs_1 <- likert(summary = ResultyG_1$results, grouping = ResultyG_1$results[,1])
plot(ResultyGs_1, type="bar", centered=FALSE)
tab <- read.delim("D:/GIS/Rosix/tab.txt")
View(tab)
library(tidyverse)
library(ggplot2)
mytitle<-"How do you assess the travel experience \nof the following modes of transportation?"
mylevels<-c("Strongly dislike",	"Dislike",	"Indifferent",	"Like",	"Strongly like")
numlevels<-length(tab[1,])-1
numcenter<-ceiling(numlevels/2)+1
tab$midvalues<-tab[,numcenter]/2
tab2<-cbind(tab[,1],tab[,2:ceiling(numlevels/2)],
tab$midvalues,tab$midvalues,tab[,numcenter:numlevels+1])
colnames(tab2)<-c("outcome",mylevels[1:floor(numlevels/2)],"midlow",
"midhigh",mylevels[numcenter:numlevels])
View(tab)
tab <- read.delim("D:/GIS/Rosix/tab.txt", row.names=1)
View(tab)
colnames(tab)<-c("0","No","I am not sure",
"Yes","5","midvalues")
colnames(tab)<-c("SFS","0","No","I am not sure",
"Yes","5","midvalues")
library(tidyverse)
library(ggplot2)
mytitle<-"How do you assess the travel experience \nof the following modes of transportation?"
mylevels<-c("Strongly dislike",	"Dislike",	"Indifferent",	"Like",	"Strongly like")
numlevels<-length(tab[1,])-1
numcenter<-ceiling(numlevels/2)+1
tab$midvalues<-tab[,numcenter]/2
tab2<-cbind(tab[,1],tab[,2:ceiling(numlevels/2)],
tab$midvalues,tab$midvalues,tab[,numcenter:numlevels+1])
colnames(tab2)<-c("outcome",mylevels[1:floor(numlevels/2)],"midlow",
"midhigh",mylevels[numcenter:numlevels])
View(tab2)
numlevels<-length(tab[1,])-1
numcenter<-ceiling(numlevels/2)+1
tab$midvalues<-tab[,numcenter]/2
tab2<-cbind(tab[,1],tab[,2:ceiling(numlevels/2)],
tab$midvalues,tab$midvalues,tab[,numcenter:numlevels+1])
tab<-tab[,-c(7)]
library(tidyverse)
library(ggplot2)
mytitle<-"How do you assess the travel experience \nof the following modes of transportation?"
mylevels<-c("Strongly dislike",	"Dislike",	"Indifferent",	"Like",	"Strongly like")
numlevels<-length(tab[1,])-1
numcenter<-ceiling(numlevels/2)+1
tab$midvalues<-tab[,numcenter]/2
tab2<-cbind(tab[,1],tab[,2:ceiling(numlevels/2)],
tab$midvalues,tab$midvalues,tab[,numcenter:numlevels+1])
colnames(tab2)<-c("outcome",mylevels[1:floor(numlevels/2)],"midlow",
"midhigh",mylevels[numcenter:numlevels])
numlevels<-length(mylevels)+1
point1<-2
point2<-((numlevels)/2)+1
point3<-point2+1
point4<-numlevels+1
mymin<-(ceiling(max(rowSums(tab2[,point1:point2]))*4)/4)*-100
mymax<-(ceiling(max(rowSums(tab2[,point3:point4]))*4)/4)*100
numlevels<-length(tab[1,])-1
temp.rows<-length(tab2[,1])
pal<-brewer.pal((numlevels-1),"RdBu")
tab<-tab[,-c(7)]
library(tidyverse)
library(ggplot2)
library(RColorBrewer)
mytitle<-"How do you assess the travel experience \nof the following modes of transportation?"
mylevels<-c("Strongly dislike",	"Dislike",	"Indifferent",	"Like",	"Strongly like")
numlevels<-length(tab[1,])-1
numcenter<-ceiling(numlevels/2)+1
tab$midvalues<-tab[,numcenter]/2
tab2<-cbind(tab[,1],tab[,2:ceiling(numlevels/2)],
tab$midvalues,tab$midvalues,tab[,numcenter:numlevels+1])
colnames(tab2)<-c("outcome",mylevels[1:floor(numlevels/2)],"midlow",
"midhigh",mylevels[numcenter:numlevels])
numlevels<-length(mylevels)+1
point1<-2
point2<-((numlevels)/2)+1
point3<-point2+1
point4<-numlevels+1
mymin<-(ceiling(max(rowSums(tab2[,point1:point2]))*4)/4)*-100
mymax<-(ceiling(max(rowSums(tab2[,point3:point4]))*4)/4)*100
numlevels<-length(tab[1,])-1
temp.rows<-length(tab2[,1])
pal<-brewer.pal((numlevels-1),"RdBu")
pal[ceiling(numlevels/2)]<-"#DFDFDF"
legend.pal<-pal
pal<-c(pal[1:(ceiling(numlevels/2)-1)], pal[ceiling(numlevels/2)],
pal[ceiling(numlevels/2)], pal[(ceiling(numlevels/2)+1):(numlevels-1)])
tab3<-melt(tab2,id="outcome")
tab<-tab[,-c(7)]
library(tidyverse)
library(ggplot2)
library(RColorBrewer)
library(reshape2)
mytitle<-"How do you assess the travel experience \nof the following modes of transportation?"
mylevels<-c("Strongly dislike",	"Dislike",	"Indifferent",	"Like",	"Strongly like")
numlevels<-length(tab[1,])-1
numcenter<-ceiling(numlevels/2)+1
tab$midvalues<-tab[,numcenter]/2
tab2<-cbind(tab[,1],tab[,2:ceiling(numlevels/2)],
tab$midvalues,tab$midvalues,tab[,numcenter:numlevels+1])
colnames(tab2)<-c("outcome",mylevels[1:floor(numlevels/2)],"midlow",
"midhigh",mylevels[numcenter:numlevels])
numlevels<-length(mylevels)+1
point1<-2
point2<-((numlevels)/2)+1
point3<-point2+1
point4<-numlevels+1
mymin<-(ceiling(max(rowSums(tab2[,point1:point2]))*4)/4)*-100
mymax<-(ceiling(max(rowSums(tab2[,point3:point4]))*4)/4)*100
numlevels<-length(tab[1,])-1
temp.rows<-length(tab2[,1])
pal<-brewer.pal((numlevels-1),"RdBu")
pal[ceiling(numlevels/2)]<-"#DFDFDF"
legend.pal<-pal
pal<-c(pal[1:(ceiling(numlevels/2)-1)], pal[ceiling(numlevels/2)],
pal[ceiling(numlevels/2)], pal[(ceiling(numlevels/2)+1):(numlevels-1)])
tab3<-melt(tab2,id="outcome")
tab3$col<-rep(pal,each=temp.rows)
tab3$value<-tab3$value*100
tab3$outcome<-str_wrap(tab3$outcome, width = 40)
tab3$outcome<-factor(tab3$outcome, levels = tab2$outcome[order(-(tab2[,5]+tab2[,6]+tab2[,7]))])
highs<-na.omit(tab3[(length(tab3[,1])/2)+1:length(tab3[,1]),])
lows<-na.omit(tab3[1:(length(tab3[,1])/2),])
lows <- lows[rev(rownames(lows)),]
lows$col <- factor(lows$col, levels = c("#CA0020","#F4A582", "#DFDFDF"))
ggplot() + geom_bar(data=highs, aes(x = outcome, y=value, fill=col), position="stack", stat="identity") +
geom_bar(data=lows, aes(x = outcome, y=-value, fill=col), position="stack", stat="identity") +
geom_hline(yintercept = 0, color =c("white")) +
scale_fill_identity("",labels = mylevels, breaks=legend.pal, guide="legend") +
theme_fivethirtyeight() +
coord_flip() +
labs(title=mytitle, y="Percent",x="") +
theme(plot.title = element_text(size=14, hjust=0.5)) +
theme(axis.text.y = element_text(hjust=0)) +
theme(legend.position = "bottom") +
theme(rect=element_rect(fill ="White", linetype = 0, colour = NA)) +
theme(axis.title = element_text(size=8,hjust=1)) +
scale_y_continuous(breaks=seq(mymin,mymax,25), limits=c(-62,mymax)) #substituí mymin por -62 para cortar um pouco à esquerda
tab<-tab[,-c(7)]
library(tidyverse)
library(ggplot2)
library(RColorBrewer)
library(reshape2)
library(ggthemes)
mytitle<-"How do you assess the travel experience \nof the following modes of transportation?"
mylevels<-c("Strongly dislike",	"Dislike",	"Indifferent",	"Like",	"Strongly like")
numlevels<-length(tab[1,])-1
numcenter<-ceiling(numlevels/2)+1
tab$midvalues<-tab[,numcenter]/2
tab2<-cbind(tab[,1],tab[,2:ceiling(numlevels/2)],
tab$midvalues,tab$midvalues,tab[,numcenter:numlevels+1])
colnames(tab2)<-c("outcome",mylevels[1:floor(numlevels/2)],"midlow",
"midhigh",mylevels[numcenter:numlevels])
numlevels<-length(mylevels)+1
point1<-2
point2<-((numlevels)/2)+1
point3<-point2+1
point4<-numlevels+1
mymin<-(ceiling(max(rowSums(tab2[,point1:point2]))*4)/4)*-100
mymax<-(ceiling(max(rowSums(tab2[,point3:point4]))*4)/4)*100
numlevels<-length(tab[1,])-1
temp.rows<-length(tab2[,1])
pal<-brewer.pal((numlevels-1),"RdBu")
pal[ceiling(numlevels/2)]<-"#DFDFDF"
legend.pal<-pal
pal<-c(pal[1:(ceiling(numlevels/2)-1)], pal[ceiling(numlevels/2)],
pal[ceiling(numlevels/2)], pal[(ceiling(numlevels/2)+1):(numlevels-1)])
tab3<-melt(tab2,id="outcome")
tab3$col<-rep(pal,each=temp.rows)
tab3$value<-tab3$value*100
tab3$outcome<-str_wrap(tab3$outcome, width = 40)
tab3$outcome<-factor(tab3$outcome, levels = tab2$outcome[order(-(tab2[,5]+tab2[,6]+tab2[,7]))])
highs<-na.omit(tab3[(length(tab3[,1])/2)+1:length(tab3[,1]),])
lows<-na.omit(tab3[1:(length(tab3[,1])/2),])
lows <- lows[rev(rownames(lows)),]
lows$col <- factor(lows$col, levels = c("#CA0020","#F4A582", "#DFDFDF"))
ggplot() + geom_bar(data=highs, aes(x = outcome, y=value, fill=col), position="stack", stat="identity") +
geom_bar(data=lows, aes(x = outcome, y=-value, fill=col), position="stack", stat="identity") +
geom_hline(yintercept = 0, color =c("white")) +
scale_fill_identity("",labels = mylevels, breaks=legend.pal, guide="legend") +
theme_fivethirtyeight() +
coord_flip() +
labs(title=mytitle, y="Percent",x="") +
theme(plot.title = element_text(size=14, hjust=0.5)) +
theme(axis.text.y = element_text(hjust=0)) +
theme(legend.position = "bottom") +
theme(rect=element_rect(fill ="White", linetype = 0, colour = NA)) +
theme(axis.title = element_text(size=8,hjust=1)) +
scale_y_continuous(breaks=seq(mymin,mymax,25), limits=c(-62,mymax)) #substituí mymin por -62 para cortar um pouco à esquerda
tab<-tab[,-c(7)]
tab <- read.delim("D:/GIS/Rosix/tab.txt", row.names=1)
View(tab)
library(tidyverse)
library(ggplot2)
library(RColorBrewer)
library(reshape2)
library(ggthemes)
mytitle<-"How do you assess the travel experience \nof the following modes of transportation?"
mylevels<-c("Strongly dislike",	"Dislike",	"Indifferent",	"Like",	"Strongly like")
numlevels<-length(tab[1,])-1
numcenter<-ceiling(numlevels/2)+1
tab$midvalues<-tab[,numcenter]/2
tab2<-cbind(tab[,1],tab[,2:ceiling(numlevels/2)],
tab$midvalues,tab$midvalues,tab[,numcenter:numlevels+1])
colnames(tab2)<-c("outcome",mylevels[1:floor(numlevels/2)],"midlow",
"midhigh",mylevels[numcenter:numlevels])
numlevels<-length(mylevels)+1
point1<-2
point2<-((numlevels)/2)+1
point3<-point2+1
point4<-numlevels+1
mymin<-(ceiling(max(rowSums(tab2[,point1:point2]))*4)/4)*-100
mymax<-(ceiling(max(rowSums(tab2[,point3:point4]))*4)/4)*100
numlevels<-length(tab[1,])-1
temp.rows<-length(tab2[,1])
pal<-brewer.pal((numlevels-1),"RdBu")
pal[ceiling(numlevels/2)]<-"#DFDFDF"
legend.pal<-pal
pal<-c(pal[1:(ceiling(numlevels/2)-1)], pal[ceiling(numlevels/2)],
pal[ceiling(numlevels/2)], pal[(ceiling(numlevels/2)+1):(numlevels-1)])
tab3<-melt(tab2,id="outcome")
tab3$col<-rep(pal,each=temp.rows)
tab3$value<-tab3$value*100
tab3$outcome<-str_wrap(tab3$outcome, width = 40)
tab3$outcome<-factor(tab3$outcome, levels = tab2$outcome[order(-(tab2[,5]+tab2[,6]+tab2[,7]))])
highs<-na.omit(tab3[(length(tab3[,1])/2)+1:length(tab3[,1]),])
lows<-na.omit(tab3[1:(length(tab3[,1])/2),])
lows <- lows[rev(rownames(lows)),]
lows$col <- factor(lows$col, levels = c("#CA0020","#F4A582", "#DFDFDF"))
ggplot() + geom_bar(data=highs, aes(x = outcome, y=value, fill=col), position="stack", stat="identity") +
geom_bar(data=lows, aes(x = outcome, y=-value, fill=col), position="stack", stat="identity") +
geom_hline(yintercept = 0, color =c("white")) +
scale_fill_identity("",labels = mylevels, breaks=legend.pal, guide="legend") +
theme_fivethirtyeight() +
coord_flip() +
labs(title=mytitle, y="Percent",x="") +
theme(plot.title = element_text(size=14, hjust=0.5)) +
theme(axis.text.y = element_text(hjust=0)) +
theme(legend.position = "bottom") +
theme(rect=element_rect(fill ="White", linetype = 0, colour = NA)) +
theme(axis.title = element_text(size=8,hjust=1)) +
scale_y_continuous(breaks=seq(mymin,mymax,25), limits=c(-62,mymax)) #substituí mymin por -62 para cortar um pouco à esquerda
tab<-tab[,-c(7)]
save.image("D:/GIS/Rosix/.RData")
ResultyG_1 <- likert(Personalityyy[c(1:6)], grouping=Personalityyy$CHANGE_Class3)
ResultyGs_1 <- likert(summary = ResultyG_1$results, grouping = ResultyG_1$results[,1])
plot(ResultyGs_1, type="bar", centered=FALSE)
ResultyG_1 <- likert(Personalityyy[c(1:6)], grouping=Personalityyy$CHANGE_Class3)
ResultyGs_1 <- likert(summary = ResultyG_1$results, grouping = ResultyG_1$results[,1])
plot(ResultyGs_1, type="bar", centered=FALSE)
library(tidyverse)
